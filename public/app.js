// –§–µ—Ä–º–∞ –∞—Ä–±—É–∑–æ–≤ ‚Äî Vanilla JS —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ README
// –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∏ –ø—Ä–æ—Ç–æ—Ç–∏–ø
function Watermelon(name, size) {
  this.name = name
  this.size = size
}

Watermelon.prototype.grow = function () {
  this.size += 1
}

// –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
const watermelons = []
let coins = 0

// DOM —Å—Å—ã–ª–∫–∏
const fieldEl = document.getElementById('field')
const statsEl = document.getElementById('stats')
const logEl = document.getElementById('log')
const plantBtn = document.getElementById('plantBtn')
const harvestBtn = document.getElementById('harvestBtn')
const sellBtn = document.getElementById('sellBtn')

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
const NAMES = [
  '–ê—Å—Ç—Ä–∞',
  '–ë–ª–∏–∫',
  '–í–∏—Ö—Ä—å',
  '–ì–ª—è–Ω–µ—Ü',
  '–î—é—à–µ—Å',
  '–ò—Å–∫—Ä–∞',
  '–ö–æ–º–µ—Ç–∞',
  '–õ–∞–π–º',
  '–ú—è—Ç–∞',
  '–ù–µ–∫—Ç–∞—Ä',
  '–û–Ω–∏–∫—Å',
  '–ü–ª—é—â',
  '–†—É–º–±–∞',
  '–°—Ñ–µ—Ä–∞',
  '–¢–æ–Ω—É—Å',
  '–£–ª—å—Ç—Ä–∞',
  '–§—Ä–µ—à',
  '–•—Ä—É—Å—Ç',
  '–¶–∏—Ç—Ä—É—Å',
  '–Ø–Ω—Ç–∞—Ä—å',
]

const getRandomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min

const generateName = () => {
  const idx = getRandomInt(0, NAMES.length - 1)
  return `${NAMES[idx]}-${getRandomInt(100, 999)}`
}

const getStatus = (size) => {
  if (size >= 12) return '–æ–≥—Ä–æ–º–Ω—ã–π'
  if (size >= 6) return '—Å—Ä–µ–¥–Ω–∏–π'
  return '–º–∞–ª–µ–Ω—å–∫–∏–π'
}

const addLog = (text) => {
  const item = document.createElement('div')
  const time = new Date().toLocaleTimeString('ru-RU', { hour12: false })
  item.textContent = `[${time}] ${text}`
  logEl.appendChild(item)
  logEl.scrollTop = logEl.scrollHeight
}

const updateStats = () => {
  const total = watermelons.length
  const weeds = fieldEl.querySelectorAll('[data-type="weed"]').length
  const big = watermelons.filter((w) => w.size >= 12).length
  const medium = watermelons.filter((w) => w.size >= 6 && w.size <= 11).length
  const small = watermelons.filter((w) => w.size <= 5).length

  statsEl.innerHTML = ''
  const lines = [
    `–í—Å–µ–≥–æ –∞—Ä–±—É–∑–æ–≤: ${total}`,
    `–ú–∞–ª–µ–Ω—å–∫–∏–µ: ${small}`,
    `–°—Ä–µ–¥–Ω–∏–µ: ${medium}`,
    `–û–≥—Ä–æ–º–Ω—ã–µ: ${big}`,
    `–°–æ—Ä–Ω—è–∫–æ–≤: ${weeds}`,
    `–ú–æ–Ω–µ—Ç—ã: ${coins}`,
  ]

  lines.forEach((text) => {
    const div = document.createElement('div')
    div.textContent = text
    statsEl.appendChild(div)
  })
}

// –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ –∞—Ä–±—É–∑–∞
const createWatermelonCard = (watermelon) => {
  const tpl = document.getElementById('cardTemplate')
  const node = tpl.content.firstElementChild.cloneNode(true)

  node.querySelector('.name').textContent = watermelon.name
  node.querySelector('.size').textContent = `—Ä–∞–∑–º–µ—Ä: ${watermelon.size}`
  node.querySelector('.status').textContent = getStatus(watermelon.size)

  node.dataset.size = String(watermelon.size)
  node.classList.toggle('card--big', watermelon.size >= 12 && watermelon.size < 15)
  node.classList.toggle('card--huge', watermelon.size >= 15)

  node.addEventListener('click', () => {
    // –ö–ª–∏–∫ –ø–æ —Å–æ—Ä–Ω—è–∫—É –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
    if (node.dataset.type === 'weed') return

    watermelon.grow()
    if (watermelon.size >= 15) {
      // –õ–æ–ø–∞–µ—Ç—Å—è –∏ –∏—Å—á–µ–∑–∞–µ—Ç
      const idx = watermelons.indexOf(watermelon)
      if (idx !== -1) watermelons.splice(idx, 1)
      node.remove()
      addLog(`${watermelon.name} –ª–æ–ø–Ω—É–ª –ø—Ä–∏ —Ä–∞–∑–º–µ—Ä–µ ${watermelon.size} –∏ –∏—Å—á–µ–∑`)
      updateStats()
      return
    }

    // –û–±–Ω–æ–≤–∏—Ç—å –≤–∏–∑—É–∞–ª—å–Ω–æ
    node.dataset.size = String(watermelon.size)
    node.querySelector('.size').textContent = `—Ä–∞–∑–º–µ—Ä: ${watermelon.size}`
    node.querySelector('.status').textContent = getStatus(watermelon.size)
    node.classList.toggle('card--big', watermelon.size >= 12)
    addLog(`${watermelon.name} –≤—ã—Ä–æ—Å –¥–æ ${watermelon.size}`)
    updateStats()
  })

  return node
}

// –°–æ—Ä–Ω—è–∫
const createWeedCard = () => {
  const tpl = document.getElementById('weedTemplate')
  return tpl.content.firstElementChild.cloneNode(true)
}

// –ü–æ—Å–∞–¥–∫–∞: —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 30% –ø–æ—è–≤–ª—è–µ—Ç—Å—è —Å–æ—Ä–Ω—è–∫, –∏–Ω–∞—á–µ –∞—Ä–±—É–∑ —Ä–∞–∑–º–µ—Ä–∞ 1‚Äì10
const plantWatermelon = () => {
  const isWeed = Math.random() < 0.3
  if (isWeed) {
    const weed = createWeedCard()
    fieldEl.appendChild(weed)
    addLog('–ù–∞ –≥—Ä—è–¥–∫–µ –≤—ã—Ä–æ—Å —Å–æ—Ä–Ω—è–∫ üåø')
    updateStats()
    return
  }

  const size = getRandomInt(1, 10)
  const wm = new Watermelon(generateName(), size)
  watermelons.push(wm)
  const card = createWatermelonCard(wm)
  fieldEl.appendChild(card)
  addLog(`–ü–æ—Å–∞–∂–µ–Ω –∞—Ä–±—É–∑ ${wm.name} (—Ä–∞–∑–º–µ—Ä ${wm.size})`)
  updateStats()
}

// –£—Ä–æ–∂–∞–π: –≤—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –∞—Ä–±—É–∑–æ–≤ –≤ –ª–æ–≥
const harvest = () => {
  if (watermelons.length === 0) {
    addLog('–£—Ä–æ–∂–∞–π –ø—É—Å—Ç ‚Äî –∞—Ä–±—É–∑–æ–≤ –Ω–µ—Ç')
    return
  }
  addLog('–°–ø–∏—Å–æ–∫ –∞—Ä–±—É–∑–æ–≤:')
  watermelons
    .slice()
    .sort((a, b) => b.size - a.size)
    .forEach((w) => addLog(`‚Ä¢ ${w.name} ‚Äî —Ä–∞–∑–º–µ—Ä ${w.size} (${getStatus(w.size)})`))
}

// –ü—Ä–æ–¥–∞–∂–∞: —Å—É–º–º–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä—ã –∫–∞–∫ –º–æ–Ω–µ—Ç—ã –∏ –æ—á–∏—â–∞–µ–º –ø–æ–ª–µ
const sell = () => {
  const sum = watermelons.reduce((acc, w) => acc + w.size, 0)
  const weeds = fieldEl.querySelectorAll('[data-type="weed"]')
  if (sum === 0 && weeds.length === 0) {
    addLog('–ü—Ä–æ–¥–∞–≤–∞—Ç—å –Ω–µ—á–µ–≥–æ')
    return
  }
  coins += sum
  addLog(`–ü—Ä–æ–¥–∞–Ω–æ –∞—Ä–±—É–∑–æ–≤ –Ω–∞ —Å—É–º–º—É ${sum} –º–æ–Ω–µ—Ç. –ë–∞–ª–∞–Ω—Å: ${coins}`)
  watermelons.splice(0, watermelons.length)
  // –û—á–∏—Å—Ç–∏—Ç—å –ø–æ–ª–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é
  fieldEl.innerHTML = ''
  updateStats()
}

// –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π
plantBtn.addEventListener('click', plantWatermelon)
harvestBtn.addEventListener('click', harvest)
sellBtn.addEventListener('click', sell)

// –ü–µ—Ä–≤–∏—á–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
updateStats()
addLog('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ ¬´–§–µ—Ä–º—É –∞—Ä–±—É–∑–æ–≤¬ª! –ù–∞–∂–º–∏—Ç–µ ¬´–ü–æ—Å–∞–¥–∏—Ç—å –∞—Ä–±—É–∑¬ª.')

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è —Ç–µ—Å—Ç–æ–≤ / UMD-—Å—Ç–∏–ª—å
const __api = {
  Watermelon,
  generateName,
  getStatus,
  createWatermelonCard,
  plantWatermelon,
  harvest,
  sell,
  watermelons,
  get coins() {
    return coins
  },
}

if (typeof module !== 'undefined' && module.exports) {
  module.exports = __api
} else if (typeof window !== 'undefined') {
  window.WatermelonFarm = __api
}

